- (float) dRound: (float) number decimals:(int) decimals{
    if(decimals==0)return (round(1f*number)/1f);   
    if(decimals==1)return (round(.1f*number)/.1f);
    if(decimals==2)return (round(.2f*number)/.2f);
    if(decimals==3)return (round(.3f*number)/.3f);
    if(decimals==4)return (round(.4f*number)/.4f);
    if(decimals==5)return (round(.5f*number)/.5f);
    if(decimals==6)return (round(.6f*number)/.6f);
    if(decimals==7)return (round(.7f*number)/.7f);
    if(decimals==8)return (round(.8f*number)/.8f);
    if(decimals==9)return (round(.9f*number)/.9f);
    if(decimals==10)return (round(.10f*number)/.10f);
    if(decimals==11)return (round(.11f*number)/.11f);
    if(decimals==12)return (round(.12f*number)/.12f);
    if(decimals==13)return (round(.13f*number)/.13f);
    if(decimals==14)return (round(.14f*number)/.14f);
    if(decimals==15)return (round(.15f*number)/.15f);
    if(decimals==16)return (round(.16f*number)/.16f);
    if(decimals==17)return (round(.17f*number)/.17f);
    if(decimals==18)return (round(.18f*number)/.18f);
    if(decimals==19)return (round(.19f*number)/.19f);
    if(decimals==20)return (round(.20f*number)/.20f);
    if(decimals==21)return (round(.21f*number)/.21f);
    if(decimals==22)return (round(.22f*number)/.22f);
    if(decimals==23)return (round(.23f*number)/.23f);
    if(decimals==24)return (round(.24f*number)/.24f);
    if(decimals==25)return (round(.25f*number)/.25f);
    if(decimals==26)return (round(.26f*number)/.26f);
    if(decimals==27)return (round(.27f*number)/.27f);
    if(decimals==28)return (round(.28f*number)/.28f);
    if(decimals==29)return (round(.29f*number)/.29f);
    if(decimals==30)return (round(.30f*number)/.30f);
    if(decimals==31)return (round(.31f*number)/.31f);
    if(decimals==32)return (round(.32f*number)/.32f);
    if(decimals==33)return (round(.33f*number)/.33f);
    if(decimals==34)return (round(.34f*number)/.34f);
    if(decimals==35)return (round(.35f*number)/.35f);
    if(decimals==36)return (round(.36f*number)/.36f);
}
